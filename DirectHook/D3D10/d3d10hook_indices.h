#pragma once

#define ENTRY_COUNT(Class) (Class##_LastEntry - Class##_FirstEntry + 1)

namespace directhook::d3d10
{
	enum
	{
		SwapChain_FirstEntry,
		SwapChain_QueryInterface = SwapChain_FirstEntry,
		SwapChain_AddRef,
		SwapChain_Release,
		SwapChain_SetPrivateData,
		SwapChain_SetPrivateDataInterface,
		SwapChain_GetPrivateData,
		SwapChain_GetParent,
		SwapChain_GetDevice,
		SwapChain_Present,
		SwapChain_GetBuffer,
		SwapChain_SetFullscreenState,
		SwapChain_GetFullscreenState,
		SwapChain_GetDesc,
		SwapChain_ResizeBuffers,
		SwapChain_ResizeTarget,
		SwapChain_GetContainingOutput,
		SwapChain_GetFrameStatistics,
		SwapChain_GetLastPresentCount,
		SwapChain_LastEntry = SwapChain_GetLastPresentCount,

		Device_FirstEntry,
		Device_QueryInterface = Device_FirstEntry,
		Device_AddRef,
		Device_Release,
		Device_VSSetConstantBuffers,
		Device_PSSetShaderResources,
		Device_PSSetShader,
		Device_PSSetSamplers,
		Device_VSSetShader,
		Device_DrawIndexed,
		Device_Draw,
		Device_PSSetConstantBuffers,
		Device_IASetInputLayout,
		Device_IASetVertexBuffers,
		Device_IASetIndexBuffer,
		Device_DrawIndexedInstanced,
		Device_DrawInstanced,
		Device_GSSetConstantBuffers,
		Device_GSSetShader,
		Device_IASetPrimitiveTopology,
		Device_VSSetShaderResources,
		Device_VSSetSamplers,
		Device_SetPredication,
		Device_GSSetShaderResources,
		Device_GSSetSamplers,
		Device_OMSetRenderTargets,
		Device_OMSetBlendState,
		Device_OMSetDepthStencilState,
		Device_SOSetTargets,
		Device_DrawAuto,
		Device_RSSetState,
		Device_RSSetViewports,
		Device_RSSetScissorRects,
		Device_CopySubresourceRegion,
		Device_CopyResource,
		Device_UpdateSubresource,
		Device_ClearRenderTargetView,
		Device_ClearDepthStencilView,
		Device_GenerateMips,
		Device_ResolveSubresource,
		Device_VSGetConstantBuffers,
		Device_PSGetShaderResources,
		Device_PSGetShader,
		Device_PSGetSamplers,
		Device_VSGetShader,
		Device_PSGetConstantBuffers,
		Device_IAGetInputLayout,
		Device_IAGetVertexBuffers,
		Device_IAGetIndexBuffer,
		Device_GSGetConstantBuffers,
		Device_GSGetShader,
		Device_IAGetPrimitiveTopology,
		Device_VSGetShaderResources,
		Device_VSGetSamplers,
		Device_GetPredication,
		Device_GSGetShaderResources,
		Device_GSGetSamplers,
		Device_OMGetRenderTargets,
		Device_OMGetBlendState,
		Device_OMGetDepthStencilState,
		Device_SOGetTargets,
		Device_RSGetState,
		Device_RSGetViewports,
		Device_RSGetScissorRects,
		Device_GetDeviceRemovedReason,
		Device_SetExceptionMode,
		Device_GetExceptionMode,
		Device_GetPrivateData,
		Device_SetPrivateData,
		Device_SetPrivateDataInterface,
		Device_ClearState,
		Device_Flush,
		Device_CreateBuffer,
		Device_CreateTexture1D,
		Device_CreateTexture2D,
		Device_CreateTexture3D,
		Device_CreateShaderResourceView,
		Device_CreateRenderTargetView,
		Device_CreateDepthStencilView,
		Device_CreateInputLayout,
		Device_CreateVertexShader,
		Device_CreateGeometryShader,
		Device_CreateGeometryShaderWithStreamOutput,
		Device_CreatePixelShader,
		Device_CreateBlendState,
		Device_CreateDepthStencilState,
		Device_CreateRasterizerState,
		Device_CreateSamplerState,
		Device_CreateQuery,
		Device_CreatePredicate,
		Device_CreateCounter,
		Device_CheckFormatSupport,
		Device_CheckMultisampleQualityLevels,
		Device_CheckCounterInfo,
		Device_CheckCounter,
		Device_GetCreationFlags,
		Device_OpenSharedResource,
		Device_SetTextFilterSize,
		Device_GetTextFilterSize,
		Device_LastEntry = Device_GetTextFilterSize,
	};

	static constexpr int SWAPCHAIN_ENTRIES = ENTRY_COUNT(SwapChain);
	static constexpr int DEVICE_ENTRIES = ENTRY_COUNT(Device);
}